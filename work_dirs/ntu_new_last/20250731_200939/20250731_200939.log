2025/07/31 20:09:40 - mmengine - INFO - 
------------------------------------------------------------
System environment:
    sys.platform: linux
    Python: 3.10.12 (main, Nov  6 2024, 20:22:13) [GCC 11.4.0]
    CUDA available: True
    MUSA available: False
    numpy_random_seed: 2091183594
    GPU 0: NVIDIA GeForce RTX 4060 Laptop GPU
    CUDA_HOME: /usr/local/cuda
    NVCC: Cuda compilation tools, release 11.8, V11.8.89
    GCC: x86_64-linux-gnu-gcc (Ubuntu 11.4.0-1ubuntu1~22.04) 11.4.0
    PyTorch: 2.1.2+cu118
    PyTorch compiling details: PyTorch built with:
  - GCC 9.3
  - C++ Version: 201703
  - Intel(R) oneAPI Math Kernel Library Version 2022.2-Product Build 20220804 for Intel(R) 64 architecture applications
  - Intel(R) MKL-DNN v3.1.1 (Git Hash 64f6bcbcbab628e96f33a62c3e975f8535a7bde4)
  - OpenMP 201511 (a.k.a. OpenMP 4.5)
  - LAPACK is enabled (usually provided by MKL)
  - NNPACK is enabled
  - CPU capability usage: AVX2
  - CUDA Runtime 11.8
  - NVCC architecture flags: -gencode;arch=compute_50,code=sm_50;-gencode;arch=compute_60,code=sm_60;-gencode;arch=compute_70,code=sm_70;-gencode;arch=compute_75,code=sm_75;-gencode;arch=compute_80,code=sm_80;-gencode;arch=compute_86,code=sm_86;-gencode;arch=compute_37,code=sm_37;-gencode;arch=compute_90,code=sm_90
  - CuDNN 8.7
  - Magma 2.6.1
  - Build settings: BLAS_INFO=mkl, BUILD_TYPE=Release, CUDA_VERSION=11.8, CUDNN_VERSION=8.7.0, CXX_COMPILER=/opt/rh/devtoolset-9/root/usr/bin/c++, CXX_FLAGS= -D_GLIBCXX_USE_CXX11_ABI=0 -fabi-version=11 -fvisibility-inlines-hidden -DUSE_PTHREADPOOL -DNDEBUG -DUSE_KINETO -DLIBKINETO_NOROCTRACER -DUSE_FBGEMM -DUSE_QNNPACK -DUSE_PYTORCH_QNNPACK -DUSE_XNNPACK -DSYMBOLICATE_MOBILE_DEBUG_HANDLE -O2 -fPIC -Wall -Wextra -Werror=return-type -Werror=non-virtual-dtor -Werror=bool-operation -Wnarrowing -Wno-missing-field-initializers -Wno-type-limits -Wno-array-bounds -Wno-unknown-pragmas -Wno-unused-parameter -Wno-unused-function -Wno-unused-result -Wno-strict-overflow -Wno-strict-aliasing -Wno-stringop-overflow -Wno-psabi -Wno-error=pedantic -Wno-error=old-style-cast -Wno-invalid-partial-specialization -Wno-unused-private-field -Wno-aligned-allocation-unavailable -Wno-missing-braces -fdiagnostics-color=always -faligned-new -Wno-unused-but-set-variable -Wno-maybe-uninitialized -fno-math-errno -fno-trapping-math -Werror=format -Werror=cast-function-type -Wno-stringop-overflow, LAPACK_INFO=mkl, PERF_WITH_AVX=1, PERF_WITH_AVX2=1, PERF_WITH_AVX512=1, TORCH_DISABLE_GPU_ASSERTS=ON, TORCH_VERSION=2.1.2, USE_CUDA=ON, USE_CUDNN=ON, USE_EXCEPTION_PTR=1, USE_GFLAGS=OFF, USE_GLOG=OFF, USE_MKL=ON, USE_MKLDNN=ON, USE_MPI=OFF, USE_NCCL=1, USE_NNPACK=ON, USE_OPENMP=ON, USE_ROCM=OFF, 

    TorchVision: 0.16.2+cu118
    OpenCV: 4.11.0
    MMEngine: 0.10.4

Runtime environment:
    dist_cfg: {'backend': 'nccl'}
    deterministic: False
    diff_rank_seed: False
    seed: 2091183594
    Distributed launcher: none
    Distributed training: False
    GPU number: 1
------------------------------------------------------------

2025/07/31 20:09:40 - mmengine - INFO - Config:
ann_file_test = 'data/split/ntu/ntu_test_onewin.pkl'
ann_file_train = 'data/split/ntu/ntu_train_onewin.pkl'
ann_file_val = 'data/split/ntu/ntu_val_onewin.pkl'
common_dataset_cfg = dict(type='PoseDatasetAngleWin', window=50)
custom_hooks = [
    dict(type='FreezeFirstBlockHook', unfreeze_epoch=5),
]
custom_imports = dict(
    allow_failed_imports=False,
    imports=[
        'graph_angles16_kinematic3',
        'mmaction.datasets.pose_dataset_anglewin',
        'angle_transforms',
        'prf1_metric',
        'utils.freeze_first_block_hook',
    ])
dataset_type = 'PoseDatasetAngleWin'
default_hooks = dict(
    checkpoint=dict(
        interval=5,
        max_keep_ckpts=10,
        rule='greater',
        save_best='acc/top1',
        type='CheckpointHook'),
    logger=dict(interval=100, type='LoggerHook'))
default_scope = 'mmaction'
fp16 = dict(loss_scale='dynamic')
launcher = 'none'
log_level = 'INFO'
model = dict(
    backbone=dict(
        graph_cfg=dict(layout='angles16_kinematic', mode='stgcn_spatial'),
        in_channels=2,
        tcn_dropout=0.2,
        type='STGCN'),
    cls_head=dict(
        in_channels=256,
        label_smooth_eps=0.1,
        loss_cls=dict(type='CrossEntropyLoss'),
        num_classes=120,
        type='GCNHead'),
    init_cfg=dict(
        checkpoint=
        'pretrain/stgcn_8xb16-joint-u100-80e_ntu120-xsub-keypoint-3d.pth',
        ignore_keys=[
            'backbone.data_bn',
            'backbone.gcn.0.gcn.conv',
            'backbone.gcn.*.gcn.PA',
            'backbone.gcn.*.gcn.A',
        ],
        prefix='',
        strict=False,
        type='Pretrained'),
    type='RecognizerGCN')
optim_wrapper = dict(
    clip_grad=dict(max_norm=1.0),
    optimizer=dict(
        lr=0.1, momentum=0.9, nesterov=True, type='SGD', weight_decay=0.0005),
    paramwise_cfg=dict(
        custom_keys=dict({
            'backbone.data_bn': dict(lr_mult=0.1),
            'backbone.gcn.0': dict(lr_mult=0.1),
            'cls_head.fc': dict(lr_mult=0.5)
        })),
    type='OptimWrapper')
param_scheduler = [
    dict(begin=0, by_epoch=True, end=5, start_factor=0.001, type='LinearLR'),
    dict(
        begin=5,
        by_epoch=True,
        end=60,
        gamma=0.1,
        milestones=[
            15,
            40,
        ],
        type='MultiStepLR'),
]
randomness = dict(deterministic=False, diff_rank_seed=False, seed=None)
resume = False
test_cfg = dict(type='TestLoop')
test_dataloader = dict(
    batch_size=256,
    dataset=dict(
        ann_file='data/split/ntu/ntu_test_onewin.pkl',
        lengths_pkl='data/split/ntu/ntu_clip_lengths_test.pkl',
        pipeline=[
            dict(
                clip_len=50,
                num_clips=1,
                test_mode=True,
                type='UniformSampleFrames'),
            dict(num_person=1, type='FormatGCNInput'),
            dict(type='PackActionInputs'),
        ],
        split='test',
        type='PoseDatasetAngleWin',
        window=50),
    num_workers=20,
    sampler=dict(shuffle=False, type='DefaultSampler'))
test_evaluator = [
    dict(
        metric_options=dict(top_k_accuracy=dict(topk=(1, ))),
        type='AccMetric'),
    dict(type='ConfusionMatrix'),
    dict(type='PRF1AUCMetric'),
    dict(
        out_file_path='work_dirs/test_results/results.pkl',
        type='DumpResults'),
]
train_cfg = dict(max_epochs=60, type='EpochBasedTrainLoop', val_interval=5)
train_dataloader = dict(
    batch_size=256,
    dataset=dict(
        ann_file='data/split/ntu/ntu_train_onewin.pkl',
        lengths_pkl='data/split/ntu/ntu_clip_lengths_train.pkl',
        pipeline=[
            dict(clip_len=50, type='UniformSampleFrames'),
            dict(prob=0.5, type='RandomFlipAngles'),
            dict(num_person=1, type='FormatGCNInput'),
            dict(type='PackActionInputs'),
        ],
        split='train',
        type='PoseDatasetAngleWin',
        window=50),
    num_workers=20,
    sampler=dict(shuffle=True, type='DefaultSampler'))
val_cfg = dict(type='ValLoop')
val_dataloader = dict(
    batch_size=256,
    dataset=dict(
        ann_file='data/split/ntu/ntu_val_onewin.pkl',
        lengths_pkl='data/split/ntu/ntu_clip_lengths_val.pkl',
        pipeline=[
            dict(
                clip_len=50,
                num_clips=1,
                test_mode=True,
                type='UniformSampleFrames'),
            dict(num_person=1, type='FormatGCNInput'),
            dict(type='PackActionInputs'),
        ],
        split='val',
        type='PoseDatasetAngleWin',
        window=50),
    num_workers=20,
    sampler=dict(shuffle=False, type='DefaultSampler'))
val_evaluator = [
    dict(
        metric_options=dict(top_k_accuracy=dict(topk=(1, ))),
        type='AccMetric'),
    dict(type='ConfusionMatrix'),
    dict(type='PRF1AUCMetric'),
]
visualizer = dict(
    type='ActionVisualizer',
    vis_backends=[
        dict(type='TensorboardVisBackend'),
    ])
window_len = 50
work_dir = './work_dirs/ntu_new_last'

2025/07/31 20:09:43 - mmengine - INFO - Distributed training is not used, all SyncBatchNorm (SyncBN) layers in the model will be automatically reverted to BatchNormXd layers if they are used.
2025/07/31 20:09:43 - mmengine - INFO - Hooks will be executed in the following order:
before_run:
(VERY_HIGH   ) RuntimeInfoHook                    
(BELOW_NORMAL) LoggerHook                         
 -------------------- 
before_train:
(VERY_HIGH   ) RuntimeInfoHook                    
(NORMAL      ) IterTimerHook                      
(NORMAL      ) FreezeFirstBlockHook               
(VERY_LOW    ) CheckpointHook                     
 -------------------- 
before_train_epoch:
(VERY_HIGH   ) RuntimeInfoHook                    
(NORMAL      ) IterTimerHook                      
(NORMAL      ) DistSamplerSeedHook                
(NORMAL      ) FreezeFirstBlockHook               
 -------------------- 
before_train_iter:
(VERY_HIGH   ) RuntimeInfoHook                    
(NORMAL      ) IterTimerHook                      
 -------------------- 
after_train_iter:
(VERY_HIGH   ) RuntimeInfoHook                    
(NORMAL      ) IterTimerHook                      
(BELOW_NORMAL) LoggerHook                         
(LOW         ) ParamSchedulerHook                 
(VERY_LOW    ) CheckpointHook                     
 -------------------- 
after_train_epoch:
(NORMAL      ) IterTimerHook                      
(LOW         ) ParamSchedulerHook                 
(VERY_LOW    ) CheckpointHook                     
 -------------------- 
before_val:
(VERY_HIGH   ) RuntimeInfoHook                    
 -------------------- 
before_val_epoch:
(NORMAL      ) IterTimerHook                      
 -------------------- 
before_val_iter:
(NORMAL      ) IterTimerHook                      
 -------------------- 
after_val_iter:
(NORMAL      ) IterTimerHook                      
(BELOW_NORMAL) LoggerHook                         
 -------------------- 
after_val_epoch:
(VERY_HIGH   ) RuntimeInfoHook                    
(NORMAL      ) IterTimerHook                      
(BELOW_NORMAL) LoggerHook                         
(LOW         ) ParamSchedulerHook                 
(VERY_LOW    ) CheckpointHook                     
 -------------------- 
after_val:
(VERY_HIGH   ) RuntimeInfoHook                    
 -------------------- 
after_train:
(VERY_HIGH   ) RuntimeInfoHook                    
(VERY_LOW    ) CheckpointHook                     
 -------------------- 
before_test:
(VERY_HIGH   ) RuntimeInfoHook                    
 -------------------- 
before_test_epoch:
(NORMAL      ) IterTimerHook                      
 -------------------- 
before_test_iter:
(NORMAL      ) IterTimerHook                      
 -------------------- 
after_test_iter:
(NORMAL      ) IterTimerHook                      
(BELOW_NORMAL) LoggerHook                         
 -------------------- 
after_test_epoch:
(VERY_HIGH   ) RuntimeInfoHook                    
(NORMAL      ) IterTimerHook                      
(BELOW_NORMAL) LoggerHook                         
 -------------------- 
after_test:
(VERY_HIGH   ) RuntimeInfoHook                    
 -------------------- 
after_run:
(BELOW_NORMAL) LoggerHook                         
 -------------------- 
2025/07/31 20:09:43 - mmengine - INFO - Loaded 191,458 samples from data/split/ntu/ntu_train_onewin.pkl
2025/07/31 20:09:43 - mmengine - INFO - paramwise_options -- backbone.data_bn.weight:lr=0.010000000000000002
2025/07/31 20:09:43 - mmengine - INFO - paramwise_options -- backbone.data_bn.weight:weight_decay=0.0005
2025/07/31 20:09:43 - mmengine - INFO - paramwise_options -- backbone.data_bn.weight:lr_mult=0.1
2025/07/31 20:09:43 - mmengine - INFO - paramwise_options -- backbone.data_bn.bias:lr=0.010000000000000002
2025/07/31 20:09:43 - mmengine - INFO - paramwise_options -- backbone.data_bn.bias:weight_decay=0.0005
2025/07/31 20:09:43 - mmengine - INFO - paramwise_options -- backbone.data_bn.bias:lr_mult=0.1
2025/07/31 20:09:43 - mmengine - INFO - paramwise_options -- backbone.gcn.0.gcn.PA:lr=0.010000000000000002
2025/07/31 20:09:43 - mmengine - INFO - paramwise_options -- backbone.gcn.0.gcn.PA:weight_decay=0.0005
2025/07/31 20:09:43 - mmengine - INFO - paramwise_options -- backbone.gcn.0.gcn.PA:lr_mult=0.1
2025/07/31 20:09:43 - mmengine - INFO - paramwise_options -- backbone.gcn.0.gcn.bn.weight:lr=0.010000000000000002
2025/07/31 20:09:43 - mmengine - INFO - paramwise_options -- backbone.gcn.0.gcn.bn.weight:weight_decay=0.0005
2025/07/31 20:09:43 - mmengine - INFO - paramwise_options -- backbone.gcn.0.gcn.bn.weight:lr_mult=0.1
2025/07/31 20:09:43 - mmengine - INFO - paramwise_options -- backbone.gcn.0.gcn.bn.bias:lr=0.010000000000000002
2025/07/31 20:09:43 - mmengine - INFO - paramwise_options -- backbone.gcn.0.gcn.bn.bias:weight_decay=0.0005
2025/07/31 20:09:43 - mmengine - INFO - paramwise_options -- backbone.gcn.0.gcn.bn.bias:lr_mult=0.1
2025/07/31 20:09:43 - mmengine - INFO - paramwise_options -- backbone.gcn.0.gcn.conv.weight:lr=0.010000000000000002
2025/07/31 20:09:43 - mmengine - INFO - paramwise_options -- backbone.gcn.0.gcn.conv.weight:weight_decay=0.0005
2025/07/31 20:09:43 - mmengine - INFO - paramwise_options -- backbone.gcn.0.gcn.conv.weight:lr_mult=0.1
2025/07/31 20:09:43 - mmengine - INFO - paramwise_options -- backbone.gcn.0.gcn.conv.bias:lr=0.010000000000000002
2025/07/31 20:09:43 - mmengine - INFO - paramwise_options -- backbone.gcn.0.gcn.conv.bias:weight_decay=0.0005
2025/07/31 20:09:43 - mmengine - INFO - paramwise_options -- backbone.gcn.0.gcn.conv.bias:lr_mult=0.1
2025/07/31 20:09:43 - mmengine - INFO - paramwise_options -- backbone.gcn.0.tcn.conv.weight:lr=0.010000000000000002
2025/07/31 20:09:43 - mmengine - INFO - paramwise_options -- backbone.gcn.0.tcn.conv.weight:weight_decay=0.0005
2025/07/31 20:09:43 - mmengine - INFO - paramwise_options -- backbone.gcn.0.tcn.conv.weight:lr_mult=0.1
2025/07/31 20:09:43 - mmengine - INFO - paramwise_options -- backbone.gcn.0.tcn.conv.bias:lr=0.010000000000000002
2025/07/31 20:09:43 - mmengine - INFO - paramwise_options -- backbone.gcn.0.tcn.conv.bias:weight_decay=0.0005
2025/07/31 20:09:43 - mmengine - INFO - paramwise_options -- backbone.gcn.0.tcn.conv.bias:lr_mult=0.1
2025/07/31 20:09:43 - mmengine - INFO - paramwise_options -- backbone.gcn.0.tcn.bn.weight:lr=0.010000000000000002
2025/07/31 20:09:43 - mmengine - INFO - paramwise_options -- backbone.gcn.0.tcn.bn.weight:weight_decay=0.0005
2025/07/31 20:09:43 - mmengine - INFO - paramwise_options -- backbone.gcn.0.tcn.bn.weight:lr_mult=0.1
2025/07/31 20:09:43 - mmengine - INFO - paramwise_options -- backbone.gcn.0.tcn.bn.bias:lr=0.010000000000000002
2025/07/31 20:09:43 - mmengine - INFO - paramwise_options -- backbone.gcn.0.tcn.bn.bias:weight_decay=0.0005
2025/07/31 20:09:43 - mmengine - INFO - paramwise_options -- backbone.gcn.0.tcn.bn.bias:lr_mult=0.1
2025/07/31 20:09:43 - mmengine - INFO - paramwise_options -- cls_head.fc.weight:lr=0.05
2025/07/31 20:09:43 - mmengine - INFO - paramwise_options -- cls_head.fc.weight:weight_decay=0.0005
2025/07/31 20:09:43 - mmengine - INFO - paramwise_options -- cls_head.fc.weight:lr_mult=0.5
2025/07/31 20:09:43 - mmengine - INFO - paramwise_options -- cls_head.fc.bias:lr=0.05
2025/07/31 20:09:43 - mmengine - INFO - paramwise_options -- cls_head.fc.bias:weight_decay=0.0005
2025/07/31 20:09:43 - mmengine - INFO - paramwise_options -- cls_head.fc.bias:lr_mult=0.5
2025/07/31 20:09:43 - mmengine - INFO - Loaded 53,199 samples from data/split/ntu/ntu_val_onewin.pkl
2025/07/31 20:09:43 - mmengine - WARNING - The prefix is not set in metric class PRF1AUCMetric.
2025/07/31 20:09:43 - mmengine - INFO - Loads checkpoint by local backend from path: pretrain/stgcn_8xb16-joint-u100-80e_ntu120-xsub-keypoint-3d.pth
2025/07/31 20:09:43 - mmengine - WARNING - The model and loaded state dict do not match exactly

size mismatch for backbone.data_bn.weight: copying a param with shape torch.Size([75]) from checkpoint, the shape in current model is torch.Size([32]).
size mismatch for backbone.data_bn.bias: copying a param with shape torch.Size([75]) from checkpoint, the shape in current model is torch.Size([32]).
size mismatch for backbone.data_bn.running_mean: copying a param with shape torch.Size([75]) from checkpoint, the shape in current model is torch.Size([32]).
size mismatch for backbone.data_bn.running_var: copying a param with shape torch.Size([75]) from checkpoint, the shape in current model is torch.Size([32]).
size mismatch for backbone.gcn.0.gcn.PA: copying a param with shape torch.Size([3, 25, 25]) from checkpoint, the shape in current model is torch.Size([3, 16, 16]).
size mismatch for backbone.gcn.0.gcn.A: copying a param with shape torch.Size([3, 25, 25]) from checkpoint, the shape in current model is torch.Size([3, 16, 16]).
size mismatch for backbone.gcn.0.gcn.conv.weight: copying a param with shape torch.Size([192, 3, 1, 1]) from checkpoint, the shape in current model is torch.Size([192, 2, 1, 1]).
size mismatch for backbone.gcn.1.gcn.PA: copying a param with shape torch.Size([3, 25, 25]) from checkpoint, the shape in current model is torch.Size([3, 16, 16]).
size mismatch for backbone.gcn.1.gcn.A: copying a param with shape torch.Size([3, 25, 25]) from checkpoint, the shape in current model is torch.Size([3, 16, 16]).
size mismatch for backbone.gcn.2.gcn.PA: copying a param with shape torch.Size([3, 25, 25]) from checkpoint, the shape in current model is torch.Size([3, 16, 16]).
size mismatch for backbone.gcn.2.gcn.A: copying a param with shape torch.Size([3, 25, 25]) from checkpoint, the shape in current model is torch.Size([3, 16, 16]).
size mismatch for backbone.gcn.3.gcn.PA: copying a param with shape torch.Size([3, 25, 25]) from checkpoint, the shape in current model is torch.Size([3, 16, 16]).
size mismatch for backbone.gcn.3.gcn.A: copying a param with shape torch.Size([3, 25, 25]) from checkpoint, the shape in current model is torch.Size([3, 16, 16]).
size mismatch for backbone.gcn.4.gcn.PA: copying a param with shape torch.Size([3, 25, 25]) from checkpoint, the shape in current model is torch.Size([3, 16, 16]).
size mismatch for backbone.gcn.4.gcn.A: copying a param with shape torch.Size([3, 25, 25]) from checkpoint, the shape in current model is torch.Size([3, 16, 16]).
size mismatch for backbone.gcn.5.gcn.PA: copying a param with shape torch.Size([3, 25, 25]) from checkpoint, the shape in current model is torch.Size([3, 16, 16]).
size mismatch for backbone.gcn.5.gcn.A: copying a param with shape torch.Size([3, 25, 25]) from checkpoint, the shape in current model is torch.Size([3, 16, 16]).
size mismatch for backbone.gcn.6.gcn.PA: copying a param with shape torch.Size([3, 25, 25]) from checkpoint, the shape in current model is torch.Size([3, 16, 16]).
size mismatch for backbone.gcn.6.gcn.A: copying a param with shape torch.Size([3, 25, 25]) from checkpoint, the shape in current model is torch.Size([3, 16, 16]).
size mismatch for backbone.gcn.7.gcn.PA: copying a param with shape torch.Size([3, 25, 25]) from checkpoint, the shape in current model is torch.Size([3, 16, 16]).
size mismatch for backbone.gcn.7.gcn.A: copying a param with shape torch.Size([3, 25, 25]) from checkpoint, the shape in current model is torch.Size([3, 16, 16]).
size mismatch for backbone.gcn.8.gcn.PA: copying a param with shape torch.Size([3, 25, 25]) from checkpoint, the shape in current model is torch.Size([3, 16, 16]).
size mismatch for backbone.gcn.8.gcn.A: copying a param with shape torch.Size([3, 25, 25]) from checkpoint, the shape in current model is torch.Size([3, 16, 16]).
size mismatch for backbone.gcn.9.gcn.PA: copying a param with shape torch.Size([3, 25, 25]) from checkpoint, the shape in current model is torch.Size([3, 16, 16]).
size mismatch for backbone.gcn.9.gcn.A: copying a param with shape torch.Size([3, 25, 25]) from checkpoint, the shape in current model is torch.Size([3, 16, 16]).
2025/07/31 20:09:43 - mmengine - WARNING - The model and loaded state dict do not match exactly

missing keys in source state_dict: backbone.data_bn.weight, backbone.data_bn.bias, backbone.data_bn.running_mean, backbone.data_bn.running_var, backbone.gcn.0.gcn.PA, backbone.gcn.0.gcn.A, backbone.gcn.0.gcn.conv.weight, backbone.gcn.0.gcn.conv.bias, backbone.gcn.1.gcn.PA, backbone.gcn.1.gcn.A, backbone.gcn.2.gcn.PA, backbone.gcn.2.gcn.A, backbone.gcn.3.gcn.PA, backbone.gcn.3.gcn.A, backbone.gcn.4.gcn.PA, backbone.gcn.4.gcn.A, backbone.gcn.5.gcn.PA, backbone.gcn.5.gcn.A, backbone.gcn.6.gcn.PA, backbone.gcn.6.gcn.A, backbone.gcn.7.gcn.PA, backbone.gcn.7.gcn.A, backbone.gcn.8.gcn.PA, backbone.gcn.8.gcn.A, backbone.gcn.9.gcn.PA, backbone.gcn.9.gcn.A

Name of parameter - Initialization information

backbone.data_bn.weight - torch.Size([32]): 
The value is the same before and after calling `init_weights` of RecognizerGCN  

backbone.data_bn.bias - torch.Size([32]): 
The value is the same before and after calling `init_weights` of RecognizerGCN  

backbone.gcn.0.gcn.PA - torch.Size([3, 16, 16]): 
The value is the same before and after calling `init_weights` of RecognizerGCN  

backbone.gcn.0.gcn.bn.weight - torch.Size([64]): 
PretrainedInit: load from pretrain/stgcn_8xb16-joint-u100-80e_ntu120-xsub-keypoint-3d.pth 

backbone.gcn.0.gcn.bn.bias - torch.Size([64]): 
PretrainedInit: load from pretrain/stgcn_8xb16-joint-u100-80e_ntu120-xsub-keypoint-3d.pth 

backbone.gcn.0.gcn.conv.weight - torch.Size([192, 2, 1, 1]): 
The value is the same before and after calling `init_weights` of RecognizerGCN  

backbone.gcn.0.gcn.conv.bias - torch.Size([192]): 
PretrainedInit: load from pretrain/stgcn_8xb16-joint-u100-80e_ntu120-xsub-keypoint-3d.pth 

backbone.gcn.0.tcn.conv.weight - torch.Size([64, 64, 9, 1]): 
PretrainedInit: load from pretrain/stgcn_8xb16-joint-u100-80e_ntu120-xsub-keypoint-3d.pth 

backbone.gcn.0.tcn.conv.bias - torch.Size([64]): 
PretrainedInit: load from pretrain/stgcn_8xb16-joint-u100-80e_ntu120-xsub-keypoint-3d.pth 

backbone.gcn.0.tcn.bn.weight - torch.Size([64]): 
PretrainedInit: load from pretrain/stgcn_8xb16-joint-u100-80e_ntu120-xsub-keypoint-3d.pth 

backbone.gcn.0.tcn.bn.bias - torch.Size([64]): 
PretrainedInit: load from pretrain/stgcn_8xb16-joint-u100-80e_ntu120-xsub-keypoint-3d.pth 

backbone.gcn.1.gcn.PA - torch.Size([3, 16, 16]): 
The value is the same before and after calling `init_weights` of RecognizerGCN  

backbone.gcn.1.gcn.bn.weight - torch.Size([64]): 
PretrainedInit: load from pretrain/stgcn_8xb16-joint-u100-80e_ntu120-xsub-keypoint-3d.pth 

backbone.gcn.1.gcn.bn.bias - torch.Size([64]): 
PretrainedInit: load from pretrain/stgcn_8xb16-joint-u100-80e_ntu120-xsub-keypoint-3d.pth 

backbone.gcn.1.gcn.conv.weight - torch.Size([192, 64, 1, 1]): 
PretrainedInit: load from pretrain/stgcn_8xb16-joint-u100-80e_ntu120-xsub-keypoint-3d.pth 

backbone.gcn.1.gcn.conv.bias - torch.Size([192]): 
PretrainedInit: load from pretrain/stgcn_8xb16-joint-u100-80e_ntu120-xsub-keypoint-3d.pth 

backbone.gcn.1.tcn.conv.weight - torch.Size([64, 64, 9, 1]): 
PretrainedInit: load from pretrain/stgcn_8xb16-joint-u100-80e_ntu120-xsub-keypoint-3d.pth 

backbone.gcn.1.tcn.conv.bias - torch.Size([64]): 
PretrainedInit: load from pretrain/stgcn_8xb16-joint-u100-80e_ntu120-xsub-keypoint-3d.pth 

backbone.gcn.1.tcn.bn.weight - torch.Size([64]): 
PretrainedInit: load from pretrain/stgcn_8xb16-joint-u100-80e_ntu120-xsub-keypoint-3d.pth 

backbone.gcn.1.tcn.bn.bias - torch.Size([64]): 
PretrainedInit: load from pretrain/stgcn_8xb16-joint-u100-80e_ntu120-xsub-keypoint-3d.pth 

backbone.gcn.2.gcn.PA - torch.Size([3, 16, 16]): 
The value is the same before and after calling `init_weights` of RecognizerGCN  

backbone.gcn.2.gcn.bn.weight - torch.Size([64]): 
PretrainedInit: load from pretrain/stgcn_8xb16-joint-u100-80e_ntu120-xsub-keypoint-3d.pth 

backbone.gcn.2.gcn.bn.bias - torch.Size([64]): 
PretrainedInit: load from pretrain/stgcn_8xb16-joint-u100-80e_ntu120-xsub-keypoint-3d.pth 

backbone.gcn.2.gcn.conv.weight - torch.Size([192, 64, 1, 1]): 
PretrainedInit: load from pretrain/stgcn_8xb16-joint-u100-80e_ntu120-xsub-keypoint-3d.pth 

backbone.gcn.2.gcn.conv.bias - torch.Size([192]): 
PretrainedInit: load from pretrain/stgcn_8xb16-joint-u100-80e_ntu120-xsub-keypoint-3d.pth 

backbone.gcn.2.tcn.conv.weight - torch.Size([64, 64, 9, 1]): 
PretrainedInit: load from pretrain/stgcn_8xb16-joint-u100-80e_ntu120-xsub-keypoint-3d.pth 

backbone.gcn.2.tcn.conv.bias - torch.Size([64]): 
PretrainedInit: load from pretrain/stgcn_8xb16-joint-u100-80e_ntu120-xsub-keypoint-3d.pth 

backbone.gcn.2.tcn.bn.weight - torch.Size([64]): 
PretrainedInit: load from pretrain/stgcn_8xb16-joint-u100-80e_ntu120-xsub-keypoint-3d.pth 

backbone.gcn.2.tcn.bn.bias - torch.Size([64]): 
PretrainedInit: load from pretrain/stgcn_8xb16-joint-u100-80e_ntu120-xsub-keypoint-3d.pth 

backbone.gcn.3.gcn.PA - torch.Size([3, 16, 16]): 
The value is the same before and after calling `init_weights` of RecognizerGCN  

backbone.gcn.3.gcn.bn.weight - torch.Size([64]): 
PretrainedInit: load from pretrain/stgcn_8xb16-joint-u100-80e_ntu120-xsub-keypoint-3d.pth 

backbone.gcn.3.gcn.bn.bias - torch.Size([64]): 
PretrainedInit: load from pretrain/stgcn_8xb16-joint-u100-80e_ntu120-xsub-keypoint-3d.pth 

backbone.gcn.3.gcn.conv.weight - torch.Size([192, 64, 1, 1]): 
PretrainedInit: load from pretrain/stgcn_8xb16-joint-u100-80e_ntu120-xsub-keypoint-3d.pth 

backbone.gcn.3.gcn.conv.bias - torch.Size([192]): 
PretrainedInit: load from pretrain/stgcn_8xb16-joint-u100-80e_ntu120-xsub-keypoint-3d.pth 

backbone.gcn.3.tcn.conv.weight - torch.Size([64, 64, 9, 1]): 
PretrainedInit: load from pretrain/stgcn_8xb16-joint-u100-80e_ntu120-xsub-keypoint-3d.pth 

backbone.gcn.3.tcn.conv.bias - torch.Size([64]): 
PretrainedInit: load from pretrain/stgcn_8xb16-joint-u100-80e_ntu120-xsub-keypoint-3d.pth 

backbone.gcn.3.tcn.bn.weight - torch.Size([64]): 
PretrainedInit: load from pretrain/stgcn_8xb16-joint-u100-80e_ntu120-xsub-keypoint-3d.pth 

backbone.gcn.3.tcn.bn.bias - torch.Size([64]): 
PretrainedInit: load from pretrain/stgcn_8xb16-joint-u100-80e_ntu120-xsub-keypoint-3d.pth 

backbone.gcn.4.gcn.PA - torch.Size([3, 16, 16]): 
The value is the same before and after calling `init_weights` of RecognizerGCN  

backbone.gcn.4.gcn.bn.weight - torch.Size([128]): 
PretrainedInit: load from pretrain/stgcn_8xb16-joint-u100-80e_ntu120-xsub-keypoint-3d.pth 

backbone.gcn.4.gcn.bn.bias - torch.Size([128]): 
PretrainedInit: load from pretrain/stgcn_8xb16-joint-u100-80e_ntu120-xsub-keypoint-3d.pth 

backbone.gcn.4.gcn.conv.weight - torch.Size([384, 64, 1, 1]): 
PretrainedInit: load from pretrain/stgcn_8xb16-joint-u100-80e_ntu120-xsub-keypoint-3d.pth 

backbone.gcn.4.gcn.conv.bias - torch.Size([384]): 
PretrainedInit: load from pretrain/stgcn_8xb16-joint-u100-80e_ntu120-xsub-keypoint-3d.pth 

backbone.gcn.4.tcn.conv.weight - torch.Size([128, 128, 9, 1]): 
PretrainedInit: load from pretrain/stgcn_8xb16-joint-u100-80e_ntu120-xsub-keypoint-3d.pth 

backbone.gcn.4.tcn.conv.bias - torch.Size([128]): 
PretrainedInit: load from pretrain/stgcn_8xb16-joint-u100-80e_ntu120-xsub-keypoint-3d.pth 

backbone.gcn.4.tcn.bn.weight - torch.Size([128]): 
PretrainedInit: load from pretrain/stgcn_8xb16-joint-u100-80e_ntu120-xsub-keypoint-3d.pth 

backbone.gcn.4.tcn.bn.bias - torch.Size([128]): 
PretrainedInit: load from pretrain/stgcn_8xb16-joint-u100-80e_ntu120-xsub-keypoint-3d.pth 

backbone.gcn.4.residual.conv.weight - torch.Size([128, 64, 1, 1]): 
PretrainedInit: load from pretrain/stgcn_8xb16-joint-u100-80e_ntu120-xsub-keypoint-3d.pth 

backbone.gcn.4.residual.conv.bias - torch.Size([128]): 
PretrainedInit: load from pretrain/stgcn_8xb16-joint-u100-80e_ntu120-xsub-keypoint-3d.pth 

backbone.gcn.4.residual.bn.weight - torch.Size([128]): 
PretrainedInit: load from pretrain/stgcn_8xb16-joint-u100-80e_ntu120-xsub-keypoint-3d.pth 

backbone.gcn.4.residual.bn.bias - torch.Size([128]): 
PretrainedInit: load from pretrain/stgcn_8xb16-joint-u100-80e_ntu120-xsub-keypoint-3d.pth 

backbone.gcn.5.gcn.PA - torch.Size([3, 16, 16]): 
The value is the same before and after calling `init_weights` of RecognizerGCN  

backbone.gcn.5.gcn.bn.weight - torch.Size([128]): 
PretrainedInit: load from pretrain/stgcn_8xb16-joint-u100-80e_ntu120-xsub-keypoint-3d.pth 

backbone.gcn.5.gcn.bn.bias - torch.Size([128]): 
PretrainedInit: load from pretrain/stgcn_8xb16-joint-u100-80e_ntu120-xsub-keypoint-3d.pth 

backbone.gcn.5.gcn.conv.weight - torch.Size([384, 128, 1, 1]): 
PretrainedInit: load from pretrain/stgcn_8xb16-joint-u100-80e_ntu120-xsub-keypoint-3d.pth 

backbone.gcn.5.gcn.conv.bias - torch.Size([384]): 
PretrainedInit: load from pretrain/stgcn_8xb16-joint-u100-80e_ntu120-xsub-keypoint-3d.pth 

backbone.gcn.5.tcn.conv.weight - torch.Size([128, 128, 9, 1]): 
PretrainedInit: load from pretrain/stgcn_8xb16-joint-u100-80e_ntu120-xsub-keypoint-3d.pth 

backbone.gcn.5.tcn.conv.bias - torch.Size([128]): 
PretrainedInit: load from pretrain/stgcn_8xb16-joint-u100-80e_ntu120-xsub-keypoint-3d.pth 

backbone.gcn.5.tcn.bn.weight - torch.Size([128]): 
PretrainedInit: load from pretrain/stgcn_8xb16-joint-u100-80e_ntu120-xsub-keypoint-3d.pth 

backbone.gcn.5.tcn.bn.bias - torch.Size([128]): 
PretrainedInit: load from pretrain/stgcn_8xb16-joint-u100-80e_ntu120-xsub-keypoint-3d.pth 

backbone.gcn.6.gcn.PA - torch.Size([3, 16, 16]): 
The value is the same before and after calling `init_weights` of RecognizerGCN  

backbone.gcn.6.gcn.bn.weight - torch.Size([128]): 
PretrainedInit: load from pretrain/stgcn_8xb16-joint-u100-80e_ntu120-xsub-keypoint-3d.pth 

backbone.gcn.6.gcn.bn.bias - torch.Size([128]): 
PretrainedInit: load from pretrain/stgcn_8xb16-joint-u100-80e_ntu120-xsub-keypoint-3d.pth 

backbone.gcn.6.gcn.conv.weight - torch.Size([384, 128, 1, 1]): 
PretrainedInit: load from pretrain/stgcn_8xb16-joint-u100-80e_ntu120-xsub-keypoint-3d.pth 

backbone.gcn.6.gcn.conv.bias - torch.Size([384]): 
PretrainedInit: load from pretrain/stgcn_8xb16-joint-u100-80e_ntu120-xsub-keypoint-3d.pth 

backbone.gcn.6.tcn.conv.weight - torch.Size([128, 128, 9, 1]): 
PretrainedInit: load from pretrain/stgcn_8xb16-joint-u100-80e_ntu120-xsub-keypoint-3d.pth 

backbone.gcn.6.tcn.conv.bias - torch.Size([128]): 
PretrainedInit: load from pretrain/stgcn_8xb16-joint-u100-80e_ntu120-xsub-keypoint-3d.pth 

backbone.gcn.6.tcn.bn.weight - torch.Size([128]): 
PretrainedInit: load from pretrain/stgcn_8xb16-joint-u100-80e_ntu120-xsub-keypoint-3d.pth 

backbone.gcn.6.tcn.bn.bias - torch.Size([128]): 
PretrainedInit: load from pretrain/stgcn_8xb16-joint-u100-80e_ntu120-xsub-keypoint-3d.pth 

backbone.gcn.7.gcn.PA - torch.Size([3, 16, 16]): 
The value is the same before and after calling `init_weights` of RecognizerGCN  

backbone.gcn.7.gcn.bn.weight - torch.Size([256]): 
PretrainedInit: load from pretrain/stgcn_8xb16-joint-u100-80e_ntu120-xsub-keypoint-3d.pth 

backbone.gcn.7.gcn.bn.bias - torch.Size([256]): 
PretrainedInit: load from pretrain/stgcn_8xb16-joint-u100-80e_ntu120-xsub-keypoint-3d.pth 

backbone.gcn.7.gcn.conv.weight - torch.Size([768, 128, 1, 1]): 
PretrainedInit: load from pretrain/stgcn_8xb16-joint-u100-80e_ntu120-xsub-keypoint-3d.pth 

backbone.gcn.7.gcn.conv.bias - torch.Size([768]): 
PretrainedInit: load from pretrain/stgcn_8xb16-joint-u100-80e_ntu120-xsub-keypoint-3d.pth 

backbone.gcn.7.tcn.conv.weight - torch.Size([256, 256, 9, 1]): 
PretrainedInit: load from pretrain/stgcn_8xb16-joint-u100-80e_ntu120-xsub-keypoint-3d.pth 

backbone.gcn.7.tcn.conv.bias - torch.Size([256]): 
PretrainedInit: load from pretrain/stgcn_8xb16-joint-u100-80e_ntu120-xsub-keypoint-3d.pth 

backbone.gcn.7.tcn.bn.weight - torch.Size([256]): 
PretrainedInit: load from pretrain/stgcn_8xb16-joint-u100-80e_ntu120-xsub-keypoint-3d.pth 

backbone.gcn.7.tcn.bn.bias - torch.Size([256]): 
PretrainedInit: load from pretrain/stgcn_8xb16-joint-u100-80e_ntu120-xsub-keypoint-3d.pth 

backbone.gcn.7.residual.conv.weight - torch.Size([256, 128, 1, 1]): 
PretrainedInit: load from pretrain/stgcn_8xb16-joint-u100-80e_ntu120-xsub-keypoint-3d.pth 

backbone.gcn.7.residual.conv.bias - torch.Size([256]): 
PretrainedInit: load from pretrain/stgcn_8xb16-joint-u100-80e_ntu120-xsub-keypoint-3d.pth 

backbone.gcn.7.residual.bn.weight - torch.Size([256]): 
PretrainedInit: load from pretrain/stgcn_8xb16-joint-u100-80e_ntu120-xsub-keypoint-3d.pth 

backbone.gcn.7.residual.bn.bias - torch.Size([256]): 
PretrainedInit: load from pretrain/stgcn_8xb16-joint-u100-80e_ntu120-xsub-keypoint-3d.pth 

backbone.gcn.8.gcn.PA - torch.Size([3, 16, 16]): 
The value is the same before and after calling `init_weights` of RecognizerGCN  

backbone.gcn.8.gcn.bn.weight - torch.Size([256]): 
PretrainedInit: load from pretrain/stgcn_8xb16-joint-u100-80e_ntu120-xsub-keypoint-3d.pth 

backbone.gcn.8.gcn.bn.bias - torch.Size([256]): 
PretrainedInit: load from pretrain/stgcn_8xb16-joint-u100-80e_ntu120-xsub-keypoint-3d.pth 

backbone.gcn.8.gcn.conv.weight - torch.Size([768, 256, 1, 1]): 
PretrainedInit: load from pretrain/stgcn_8xb16-joint-u100-80e_ntu120-xsub-keypoint-3d.pth 

backbone.gcn.8.gcn.conv.bias - torch.Size([768]): 
PretrainedInit: load from pretrain/stgcn_8xb16-joint-u100-80e_ntu120-xsub-keypoint-3d.pth 

backbone.gcn.8.tcn.conv.weight - torch.Size([256, 256, 9, 1]): 
PretrainedInit: load from pretrain/stgcn_8xb16-joint-u100-80e_ntu120-xsub-keypoint-3d.pth 

backbone.gcn.8.tcn.conv.bias - torch.Size([256]): 
PretrainedInit: load from pretrain/stgcn_8xb16-joint-u100-80e_ntu120-xsub-keypoint-3d.pth 

backbone.gcn.8.tcn.bn.weight - torch.Size([256]): 
PretrainedInit: load from pretrain/stgcn_8xb16-joint-u100-80e_ntu120-xsub-keypoint-3d.pth 

backbone.gcn.8.tcn.bn.bias - torch.Size([256]): 
PretrainedInit: load from pretrain/stgcn_8xb16-joint-u100-80e_ntu120-xsub-keypoint-3d.pth 

backbone.gcn.9.gcn.PA - torch.Size([3, 16, 16]): 
The value is the same before and after calling `init_weights` of RecognizerGCN  

backbone.gcn.9.gcn.bn.weight - torch.Size([256]): 
PretrainedInit: load from pretrain/stgcn_8xb16-joint-u100-80e_ntu120-xsub-keypoint-3d.pth 

backbone.gcn.9.gcn.bn.bias - torch.Size([256]): 
PretrainedInit: load from pretrain/stgcn_8xb16-joint-u100-80e_ntu120-xsub-keypoint-3d.pth 

backbone.gcn.9.gcn.conv.weight - torch.Size([768, 256, 1, 1]): 
PretrainedInit: load from pretrain/stgcn_8xb16-joint-u100-80e_ntu120-xsub-keypoint-3d.pth 

backbone.gcn.9.gcn.conv.bias - torch.Size([768]): 
PretrainedInit: load from pretrain/stgcn_8xb16-joint-u100-80e_ntu120-xsub-keypoint-3d.pth 

backbone.gcn.9.tcn.conv.weight - torch.Size([256, 256, 9, 1]): 
PretrainedInit: load from pretrain/stgcn_8xb16-joint-u100-80e_ntu120-xsub-keypoint-3d.pth 

backbone.gcn.9.tcn.conv.bias - torch.Size([256]): 
PretrainedInit: load from pretrain/stgcn_8xb16-joint-u100-80e_ntu120-xsub-keypoint-3d.pth 

backbone.gcn.9.tcn.bn.weight - torch.Size([256]): 
PretrainedInit: load from pretrain/stgcn_8xb16-joint-u100-80e_ntu120-xsub-keypoint-3d.pth 

backbone.gcn.9.tcn.bn.bias - torch.Size([256]): 
PretrainedInit: load from pretrain/stgcn_8xb16-joint-u100-80e_ntu120-xsub-keypoint-3d.pth 

cls_head.fc.weight - torch.Size([120, 256]): 
PretrainedInit: load from pretrain/stgcn_8xb16-joint-u100-80e_ntu120-xsub-keypoint-3d.pth 

cls_head.fc.bias - torch.Size([120]): 
PretrainedInit: load from pretrain/stgcn_8xb16-joint-u100-80e_ntu120-xsub-keypoint-3d.pth 
2025/07/31 20:09:43 - mmengine - WARNING - "FileClient" will be deprecated in future. Please use io functions in https://mmengine.readthedocs.io/en/latest/api/fileio.html#file-io
2025/07/31 20:09:43 - mmengine - WARNING - "HardDiskBackend" is the alias of "LocalBackend" and the former will be deprecated in future.
2025/07/31 20:09:43 - mmengine - INFO - Checkpoints will be saved to /local/shared_with_docker/Project-STGCN/work_dirs/ntu_new_last.
2025/07/31 20:10:39 - mmengine - INFO - Epoch(train)  [1][100/748]  base_lr: 1.0000e-04 lr: 1.0000e-05  eta: 6:50:56  time: 0.3960  data_time: 0.0036  memory: 4495  grad_norm: 18.3720  loss: 8.5081  top1_acc: 0.0117  top5_acc: 0.1133  loss_cls: 8.5081
2025/07/31 20:11:31 - mmengine - INFO - Epoch(train)  [1][200/748]  base_lr: 1.0000e-04 lr: 1.0000e-05  eta: 6:41:31  time: 0.4054  data_time: 0.0036  memory: 4495  grad_norm: 17.5902  loss: 7.9908  top1_acc: 0.0352  top5_acc: 0.1406  loss_cls: 7.9908
2025/07/31 20:12:24 - mmengine - INFO - Epoch(train)  [1][300/748]  base_lr: 1.0000e-04 lr: 1.0000e-05  eta: 6:37:38  time: 0.4081  data_time: 0.0036  memory: 4495  grad_norm: 17.1846  loss: 7.6367  top1_acc: 0.0586  top5_acc: 0.1680  loss_cls: 7.6367
2025/07/31 20:13:16 - mmengine - INFO - Epoch(train)  [1][400/748]  base_lr: 1.0000e-04 lr: 1.0000e-05  eta: 6:34:14  time: 0.3701  data_time: 0.0033  memory: 4495  grad_norm: 16.5735  loss: 7.3649  top1_acc: 0.0391  top5_acc: 0.1523  loss_cls: 7.3649
